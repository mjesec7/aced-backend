// backend/routes/emailRoutes.js
const express = require('express');
const router = express.Router();
const nodemailer = require('nodemailer');
const htmlPdf = require('html-pdf');
const User = require('../models/user'); // Assuming you need email/uid verification

// PDF content generator (simplified)
function generateHtmlContent({ period, selectedStats, analytics }) {
  const labelMap = {
    studyDays: '–î–Ω–µ–π –≤ –æ–±—É—á–µ–Ω–∏–∏',
    completedSubjects: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤',
    weeklyLessons: '–£—Ä–æ–∫–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é',
    monthlyLessons: '–£—Ä–æ–∫–æ–≤ –∑–∞ –º–µ—Å—è—Ü',
    streakDays: '–£—á–µ–±–Ω—ã–π —Å—Ç—Ä–∏–∫',
    mostActiveDay: '–ù–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å',
    totalLessonsDone: '–í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤'
  };
  
  let html = `<h2 style="text-align:center;">üìä Your Results in Aced</h2>`;
  selectedStats.forEach(key => {
    const label = labelMap[key] || key;
    const value = analytics[key] ?? '‚Äî';
    html += `<div style="margin:10px 0;"><strong>${label}:</strong> ${value}</div>`;
  });
  html += `<div><strong>–ü–µ—Ä–∏–æ–¥:</strong> –ü–æ—Å–ª–µ–¥–Ω–∏–µ ${period} –¥–Ω–µ–π</div>`;
  return html;
}

router.post('/send-analytics', async (req, res) => {
  const { uid, email, period, selectedStats, analytics } = req.body;
  if (!uid || !email || !period || !selectedStats || !analytics) {
    return res.status(400).json({ error: '‚ùå Missing required data' });
  }

  const htmlContent = generateHtmlContent({ period, selectedStats, analytics });

  htmlPdf.create(htmlContent).toBuffer(async (err, buffer) => {
    if (err) {
      console.error('‚ùå PDF generation failed:', err);
      return res.status(500).json({ error: 'PDF generation error' });
    }

    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_SENDER,
        pass: process.env.EMAIL_PASSWORD
      }
    });

    const mailOptions = {
      from: `ACED <${process.env.EMAIL_SENDER}>`,
      to: email,
      subject: 'üéì –¢–≤–æ—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ ACED',
      text: '–í–æ –≤–ª–æ–∂–µ–Ω–∏–∏ ‚Äî —Ç–≤–æ—è PDF –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
      attachments: [
        {
          filename: 'aced-analytics.pdf',
          content: buffer
        }
      ]
    };

    try {
      await transporter.sendMail(mailOptions);
      res.status(200).json({ message: 'üìß PDF sent successfully' });
    } catch (mailErr) {
      console.error('‚ùå Failed to send email:', mailErr);
      res.status(500).json({ error: 'Failed to send email' });
    }
  });
});

module.exports = router;
