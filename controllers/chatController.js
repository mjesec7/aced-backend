const axios = require('axios');
const Lesson = require('../models/lesson');
require('dotenv').config();

// ‚úÖ POST /api/chat ‚Äî Handles text & image-based AI queries
const getAIResponse = async (req, res) => {
  try {
    const { userInput, imageUrl, lessonId } = req.body;

    if (!userInput && !imageUrl) {
      return res.status(400).json({ error: '‚ùå –ù–µ—Ç –∑–∞–ø—Ä–æ—Å–∞ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è' });
    }

    if (!process.env.OPENAI_API_KEY) {
      return res.status(500).json({ error: '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç API-–∫–ª—é—á OpenAI' });
    }

    // üîí Filter sensitive topics
    const bannedWords = [
      '—Å—É–∏—Ü–∏–¥', '—Å–µ–∫—Å', '–ø–æ—Ä–Ω–æ', '–Ω–∞—Å–∏–ª–∏–µ', '—Ç–µ—Ä—Ä–æ—Ä–∏–∑–º', '—É–±–∏–π—Å—Ç–≤–æ', '–æ—Ä—É–∂–∏–µ',
      '–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏', '–∞–ª–∫–æ–≥–æ–ª—å', '—Ä–∞—Å–∏–∑–º', '–≥–æ–º–æ—Ñ–æ–±–∏—è', '—Å–µ–∫—Ç', '—Ä–µ–ª–∏–≥–∏—è',
      '–∏—Å–ª–∞–º', '—Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–æ', '–∏—É–¥–∞–∏–∑–º', '—Ü–µ—Ä–∫–æ–≤—å', '–∫–æ—Ä–∞–Ω', '–±–∏–±–ª–∏—è', '—Ç–∞–ª–º—É–¥',
      '–ø—Ä–æ—Ä–æ–∫', '–±–æ–≥', '—Å–∞—Ç–∞–Ω–∞', '–ª—É—Ü–∏—Ñ–µ—Ä', '–∞—Ç–µ–∏–∑–º',
      '–ø–æ–ª–∏—Ç–∏–∫–∞', '–ø—É—Ç–∏–Ω', '–∑–µ–ª–µ–Ω—Å–∫–∏–π', '–±–∞–π–¥–µ–Ω', '—Ç—Ä–∞–º–ø', '–Ω–∞—Ü–∏–∑–º', '–≥–∏—Ç–ª–µ—Ä',
      '–≤–ª–∞—Å—Ç—å', '–ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–ø–∞—Ä–ª–∞–º–µ–Ω—Ç', '–≤–∞–∫—Ü–∏–Ω–∞', 'covid', '–±–µ–∂–µ–Ω—Ü—ã'
    ];
    const safeWords = ['–∫—Ç–æ', '—á—Ç–æ', '–≥–¥–µ', '–∫–æ–≥–¥–∞', '–∫–∞–∫–æ–π', '–∫–∞–∫–∞—è', '–∫–∞–∫–∏–µ', '–∫–∞–∫–æ–≤'];
    const lowerText = (userInput || '').toLowerCase();

    const isHighlySensitive = bannedWords.some(word =>
      lowerText.includes(word) && !safeWords.some(safe => lowerText.includes(safe))
    );

    if (isHighlySensitive) {
      return res.status(403).json({
        reply: 'üö´ –í–∞—à –≤–æ–ø—Ä–æ—Å —Å–æ–¥–µ—Ä–∂–∏—Ç —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∏–ª–∏ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ç–µ–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å.'
      });
    }

    // üß† Context from lesson
    let lessonContext = '';
    if (lessonId) {
      try {
        const lesson = await Lesson.findById(lessonId);
        if (lesson) {
          lessonContext = `–£—Ä–æ–∫: ${lesson.lessonName}\n–¢–µ–º–∞: ${lesson.topic}\n–û–ø–∏—Å–∞–Ω–∏–µ: ${lesson.content || ''}\n–ü–æ–¥—Å–∫–∞–∑–∫–∞: ${lesson.hint || ''}`;
        }
      } catch (err) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Ä–æ–∫–∞:', err.message);
      }
    }

    // üî§ Message structure for OpenAI
    const contentArray = [];
    if (imageUrl) {
      contentArray.push({
        type: 'image_url',
        image_url: { url: imageUrl, detail: 'auto' },
      });
    }
    if (userInput) {
      contentArray.push({
        type: 'text',
        text: userInput,
      });
    }

    const messages = [
      {
        role: 'system',
        content: `–¢—ã ‚Äî –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –û–±—ä—è—Å–Ω—è–π —Ç–µ–º—ã –ø–æ–¥—Ä–æ–±–Ω–æ, —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏. 
–í–æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —É—Ä–æ–∫–∞:\n${lessonContext || '–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–º–µ.'}\n
–ù–µ –æ–±—Å—É–∂–¥–∞–π –ø–æ–ª–∏—Ç–∏–∫—É, —Ä–µ–ª–∏–≥–∏—é –∏–ª–∏ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–º—ã.`,
      },
      {
        role: 'user',
        content: contentArray,
      }
    ];

    console.log("üì§ Prompt to OpenAI:", JSON.stringify(messages, null, 2));

    // üåê Send to OpenAI
    const response = await axios.post(
      'https://api.openai.com/v1/chat/completions',
      {
        model: 'gpt-4o',
        messages,
        max_tokens: 1000,
        temperature: 0.5,
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
          'Content-Type': 'application/json',
        },
      }
    );

    const reply = response?.data?.choices?.[0]?.message?.content?.trim() || "‚ö†Ô∏è AI –Ω–µ —Å–º–æ–≥ –¥–∞—Ç—å –æ—Ç–≤–µ—Ç.";
    res.json({ reply });

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç AI:", error.response?.data || error.message);
    res.status(500).json({
      error: '‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI',
      debug: error.response?.data || error.message
    });
  }
};

module.exports = { getAIResponse };
